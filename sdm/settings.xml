<?xml version="1.0" encoding="UTF-8"?>
<settings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="settings.xsd">

    <folders target="dal" sql="sdm/sql"/>

    <dto scope="" inheritance="" field-names-mode="1" single-file="" macro="${php-dto}"/>

    <dao scope="" macro=""/>

    <external-vm-file path=""/>

    <ide event-log="true"/>

    <cpp class-prefix=""/>

    <jdbc jar="sdm/sqlite-jdbc-3.36.0.3.jar" class="org.sqlite.JDBC"
          url="jdbc:sqlite:$PROJECT_DIR$/todo-list.sqlite" user="" pwd=""/>

    <type-map default="">
        <type detected="java.lang.Short" target="int"/>
        <type detected="java.lang.Integer" target="int"/>
        <type detected="java.lang.Long" target="int"/>
        <type detected="java.lang.Float" target="float"/>
        <type detected="java.lang.Double" target="float"/>
        <type detected="byte[]" target="array"/>
        <type detected="java.lang.Boolean" target="bool"/>
        <type detected="java.lang.String" target="string"/>
        <type detected="java.lang.Object" target="object"/>
    </type-map>

    <macros>
        <macro name="${php-dto}">
            <vm>
                <![CDATA[#set ( $d = "$")
<?php
#if (${namespace} != "")

namespace ${namespace};
#end

// This code was generated by a tool. Don't modify it manually.
// http://sqldalmaker.sourceforge.net

class ${class_name}
{
#foreach($f in ${fields})
    /**
     * @var $f.ScalarType
     */
    private ${d}${f.Name};
#end
#foreach($f in ${fields})

    public function ${f.getterMethod()}()#if($f.ScalarType!="object"): $f.ScalarType
#else

#end
    {
        return ${d}this->$f.Name;
    }

    public function ${f.setterMethod()}(#if($f.ScalarType!="object")$f.ScalarType #end${d}value)
    {
        ${d}this->$f.getName() = ${d}value;
    }
#end
}]]>
            </vm>
        </macro>
    </macros>

</settings>